package com.study.springboot.jdbc;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

// @Repository 어노테이션을 통해 스프링 컨테이너 시작 시 자동으로 빈이 생성된다.
@Repository	// 컴포넌트
public class MyUserDAO {
	// JDBC 작업을 위해 자동주입 받는다
	@Autowired
	// 자동으로 오라클 안에 객체를 연결
	// application.properties의 오라클 정보를 사용.
	private JdbcTemplate jdbcTemplate;
	
	public List<MyUserDTO> listForBeanPropertyRowMapper() {
		String query = "select * from myuser";
		/*
		 	2개 이상의 레코드를 인출하는 select 쿼리문을 실행할 때 query 메서드를
		 	호출한다. 두번째 인수인 RowMapper가 인출된 레코드를 DTO에 저장한 후
		 	List에 추가하여 반환하게 된다.
		 */
		List<MyUserDTO> list = jdbcTemplate.query(
				query, new BeanPropertyRowMapper<MyUserDTO>(MyUserDTO.class));
		
//		for (MyUserDTO my : list) {
//			System.out.println(my);
//		}
		
		return list;
	}
}
